# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
references:

  container_config: &container_config
    docker:
      - image: node:8.10
    working_directory: ~/app

  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  dependencies_cache_key: &dependencies_cache_key
    v1-dependencies-{{ checksum "yarn.lock" }}
  dependencies_backup_cache_key: &dependencies_backup_cache_key
    v1-dependencies

  restore_dependencies: &restore_dependencies
    restore_cache:
      keys:
        - *dependencies_cache_key
        - *dependencies_backup_cache_key

  repo_cach_key: &repo_cach_key
    v1-repo-{{ .Branch }}-{{ .Revision }}
  repo_backup_cache_key: &repo_backup_cache_key
    v1-repo

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cach_key
        - *repo_backup_cache_key

version: 2
jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: *repo_cach_key
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_dependencies
      - run: yarn install
      - save_cache:
          key: *dependencies_cache_key
          paths:
            - ~/app/node_modules

  build:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_dependencies
      - run: yarn build
      - run:
          name: Move build to workspace
          command: |
            set -exu
            mkdir -p /tmp/workspace/build
            mv ./build/* /tmp/workspace/build/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build/

      ## save cache for this commit

  test:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_dependencies
      - run: yarn test

  github_deployment_create:
    <<: *container_config
    steps:
      - run: mkdir -p /tmp/workspace/deployment && touch /tmp/workspace/deployment/info.json
      - run:
          name: Create pending deployment on github.
          command: |
            curl -H "Authorization: token $GITHUB_TOKEN" \
                 -d '{"ref": "'"$CIRCLE_BRANCH"'", "required_contexts":[], "description": "Creating deployment." }' \
                 https://api.github.com/repos/jcarroll2007/ci-playground/deployments \
                 -o /tmp/workspace/deployment/info.json
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - deployment/
  # save the url from the response, then cache that in a file so it can be accessed later? then access it and use it to update the status when deploy is successful

  deploy:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_dependencies
      - *attach_workspace
      - run:
          name: Restore build from workspace
          command: |
            set -exu
            mkdir -p ./build/
            mv /tmp/workspace/build/* ./build/
            ls build/
      - run:
          name: Deploy to firebase and update github deployment status
          command: |
            if [ ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN ] ; then
              echo cat /tmp/workspace/deployment/info.json | python -c "import sys, json; print json.load(sys.stdin)['url']"
            else
              echo cat /tmp/workspace/deployment/info.json | python -c "import sys, json; print json.load(sys.stdin)['url']"
            fi

workflows:
  version: 2

  deploy:
    jobs:
      - github_deployment_create
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - build:
          requires:
            - install_dependencies
            - checkout_code
      - test:
          requires:
            - install_dependencies
            - checkout_code
      - hold:
          type: approval
          requires:
           - github_deployment_create
           - test
           - build
      - deploy:
          requires:
            - hold
